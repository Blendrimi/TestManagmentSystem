<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGenerateReport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        sQAAALEBxi1JjQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAARpSURBVEhLldXJ
        TxtXHAfwSL21f0Ali0sPXCo1VUQoNTYz3p4XlqSt8KG50CqpD1WkKk2DCk0grInBhN3lhbURDsFJKJSU
        xRjiZcBjsI0xm3HkHnrIodXcmiuvv2ePjZN6ovKTfke/D9/3fSPOSA16HLXqn0axfi6Gjb/tYeMC7OI+
        Nq3Aug+xyXOEK7xHuMqXaBZ/crrRTW8L6EmU6Gd2iH42RgzzsYiIrJpcB8fl7kNS/jxOKj1H8Srfi4uV
        /hcq8af/b3RTEQEQQhE0E/1e/2vsM9PCToFpYe8bw9K+EZBXIhIv9yYuVfoT/7wVMTud76jHN7/QjIfM
        2of8+1oHAFMRopuOLqKn21/RJGhu97xhfvfY9Gyv37S03wYIAeQP02pcU+FNhKq4hLfKG/9APPL1QaOc
        TD0cJOqxTaId30LaByFB6wgT7cNwLZredkGSY9Ns5EO4rmNA/jY+2zMYl/YJRUwrh50Va4cWQCwV/oSl
        KvTyXfHYk1H0czIV5glFKKCZ2BIAITpHuBOSjMJ13dc9iV6lSQyzsQh08rXx9z2SQTKdQPHkAheXicee
        DAVYe4BQRDvMI0giAEI0D0J/QYqzusnQR4C8giQv0UyMTSO7JB8iDQxsEIqwQwAMBwV6XRSBJAc6x/ZF
        w6PIx+hRVA8Id/K6/otccEkATN86SSEAsJgXMp2ICKGdpItPvy4pJD9g5WRl3RxJIwDYAwIgXvUwX6Se
        oBtOryNcpKfrpBsrgudbhGZ3ruQiSBLo8hOKsAMcgiRCppPTJpEElJ0+QhG2h0OQRADEq7bDX09TvCUJ
        erxzJRdBcxKA4q6XUIS1cQiSCNlOTpkkP3DbJVO0ewhFFDYPgiTCSSf5EXjCfarJnQLtVORyLoLmIvmB
        0tbnJIVYPQiSCJlOAGlR9fEF7CD/LSAH6uFNrB4L8pqJzRZIYtNORqpzk0gDTWskhbR5ECQRMp0AUgeI
        jRkI1DA/BxpVQ3y1eiR4STW22QKITfvLVvVr1yUFyBtXCUVSQLtHyHRS1sXVKXsA6OVqmEEABgM2NQZg
        hG/RjIlATidoKh9Q65J9etNNKKJocqPSVgAynXT6bjEd3kKmh7tMr4vp5QsZe6BGdT94lxniCzVjW1/m
        Fi8N1LsJRUoaAGhaEzKdlN7xzCttfkvZPV8DXFcz27thYQc3bsE2qzFvgeIdua9LEij5cYVQhAKQRMh2
        0u7ZVlh9TqXN52S6/E6me90JSZwAOFk774Ti+dzXJQl8csNFUkidu7bk5qpe3rBqljfBtnrMyjvidvjN
        yi7YHr+Z7d9Irx0WB82aEdjR4Of0n5d47Mmco8D1ZZJF6t1/yn9yJyFJEpIkoZMkJElCJ0llhy8JrysJ
        15Vk+teT8J2ExWOk59xVl6z42hJ5A0l1knld2e8k+7qy34kgHiM9Z39Yfu/8d4tDxdcWcfH1ZVx8YwUD
        guX1bgxJsLzRjUtvr2FIgkvbYK1erOzwYuaeH5d1+63iMW/MmTP/ArAWDG1yrZQQAAAAAElFTkSuQmCC
</value>
  </data>
</root>